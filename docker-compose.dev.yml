services:
  # .NET Core Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.server.dev
    container_name: people-backend
    ports:
      - "5000:8080"  # Expose backend API on port 5000
    volumes:
      - ./People.Presentation/People.Presentation.Server:/app  # Sync backend code for live reloading
      - /app/bin  # Prevent overwriting the output directory
      - /app/obj  # Prevent overwriting the obj directory
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DB_CONNECTION_STRING=Host=db;Port=5432;Username=myuser;Password=mypassword;Database=mydb  # DB connection string
    depends_on:
      - db  # Backend depends on the database
      - redis  # Backend depends on redis running

  # React Frontend using Vite (TypeScript)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.client.dev
    container_name: people-client
    ports:
      - "3000:3000"  # Map port 3000 to the host machine
    volumes:
      - ./People.Presentation/people.presentation.client:/app  # Mount the current directory to /app in the container
      - /app/node_modules  # Persist node_modules to avoid issues with volume overwrites
    environment:
      - NODE_ENV=development
    command: npm run dev  # Start the Vite dev server
    depends_on:
      - backend  # If you have a backend service, this can be defined here (optional)

  # SQL Server Database (Postgress)
  db:
    image: postgres:13
    container_name: people-db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    volumes:
      - ./People.Infrastructure/sql-data:/var/lib/postgresql/data # Persistent volume for SQL Server data

  # Redis (optional)
  redis:
    image: redis:latest
    container_name: people-redis
    ports:
      - "6379:6379"  # Expose Redis server on port 6379

volumes:
  db-data:
    driver: local
