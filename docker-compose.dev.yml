services:
  # .NET Core Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.server.dev
    container_name: people-backend
    ports:
      - "5000:8080"  # Expose backend API on port 5000
    volumes:
      - ./People.Presentation/People.Presentation.Server:/app  # Sync backend code for live reloading
      - /app/bin  # Prevent overwriting the output directory
      - /app/obj  # Prevent overwriting the obj directory
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DB_CONNECTION_STRING=Host=db;Port=5432;Username=myuser;Password=mypassword;Database=mydb  # DB connection string
    depends_on:
      - mssql  # Backend depends on the database
      - redis  # Backend depends on redis running

  # React Frontend using Vite (TypeScript)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.client.dev
    container_name: people-client
    ports:
      - "3000:3000"  # Map port 3000 to the host machine
    volumes:
      - ./People.Presentation/people.presentation.client:/app  # Mount the current directory to /app in the container
      - /app/node_modules  # Persist node_modules to avoid issues with volume overwrites
    environment:
      - NODE_ENV=development
    command: npm run dev  # Start the Vite dev server
    depends_on:
      - backend  # If you have a backend service, this can be defined here (optional)

  # SQL Server Database (MSSQL)
  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: people-db
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "YourStrong!Passw0rd"
      ACCEPT_EULA: "Y"
    volumes:
      - ./People.Infrastructure/mssql-data:/var/opt/mssql
    restart: always

  # Redis
  redis:
    image: redis:latest
    container_name: people-redis
    restart: always
    # redis-server: This is the command to start the Redis server.
    # --appendonly yes: This enables Append-Only File (AOF) persistence, meaning Redis will log every write operation to the AOF file.
    # --save 900 1: This configures Redis to create a snapshot (RDB) if at least one key is modified within 900 seconds (15 minutes).
    # --save 300 10: Redis will create a snapshot if at least 10 keys are modified within 300 seconds (5 minutes).
    # --save 60 10000: Redis will create a snapshot if at least 10,000 keys are modified within 60 seconds (1 minute).
    command: ["redis-server", "--appendonly", "yes", "--save", "900 1", "--save", "300 10", "--save", "60 10000"]
    volumes:
      - ./People.Infrastructure/redis_data:/data # This will store Redis data files (RDB, AOF, etc.) on the host machine in a Docker-managed volume named redis_data
    ports:
      - "6379:6379"  # Expose Redis server on port 6379

volumes:
  mssql-data:
    driver: local
